name: build

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2.3.4

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - run: npm install
      - run: npm run dist:webpack

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1.6.0
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          # release: ${{ startsWith(github.ref, 'refs/tags/v') }}

#            - name: deploy files
#              uses: garygrossgarten/github-action-scp@release
#              with:
#                local: './dist/'
#                remote: '/var/www/html/einsatzmonitor-frontend'
#                host: ${{ secrets.SSH_HOST }}
#                username: ${{ secrets.SSH_USER }}
#                password: ${{ secrets.SSH_PRIVATE_KEY }}
#
#            - name: Upload artifact
#              uses: actions/upload-artifact@v1.0.0
#              with:
#                name: EinsatzMonitor
#                path: ./dist/

      - run: mkdir einsatzmonitor-${{ matrix.os }}-${{ github.run_number }}
      - run: mv dist/* einsatzmonitor-${{ matrix.os }}-${{ github.run_number }}
      - run: ls

      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master
        if: matrix.os == 'ubuntu-latest'

      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: einsatzmonitor
          SENTRY_PROJECT: einsatzmonitor
        with:
          environment: production
          sourcemaps: './src/main/dist ./src/renderer/dist'
          version: ${{ steps.package-version.outputs.current-version}}
        if: matrix.os == 'ubuntu-latest'

#      - name: Deploy with SCP
#        uses: i3h/deploy-with-scp@v1.0.2
#        with:
#          src: einsatzmonitor-${{ matrix.os }}-${GITHUB_RUN_NUMBER}
#          dest: ${{ secrets.SSH_REMOTE_PATH }}
#          username: ${{ secrets.SSH_USER }}
#          server-ip: ${{ secrets.SSH_HOST }}
#          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Delete unpacked app before deployment
        run: rm -r *-unpacked/
        working-directory: einsatzmonitor-${{ matrix.os }}-${{ github.run_number }}

      - name: Deploy with SCP
        uses: garygrossgarten/github-action-scp@release
        with:
          local: einsatzmonitor-${{ matrix.os }}-${{ github.run_number }}
          remote: ${{ secrets.SSH_REMOTE_PATH }}/einsatzmonitor-${{ matrix.os }}-${{ github.run_number }}
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          privateKey: ${{ secrets.SSH_PRIVATE_KEY }}
